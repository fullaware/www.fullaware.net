<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Full Aware</title>
    <link>https://www.fullaware.net/posts/</link>
    <description>Recent content in Posts on Full Aware</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 24 Dec 2022 10:17:05 -0500</lastBuildDate><atom:link href="https://www.fullaware.net/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>K8s Waiting for Condition=Available=True</title>
      <link>https://www.fullaware.net/posts/k8s-wait/</link>
      <pubDate>Sat, 24 Dec 2022 10:17:05 -0500</pubDate>
      
      <guid>https://www.fullaware.net/posts/k8s-wait/</guid>
      <description>While working with Ansible for standing up a vanilla Kubernetes 1.25.5 cluster I found myself separating the the initial bootstrapping of the cluster plus my chosen CNI antrea from the rest of the configuration due to waiting for antrea to become Ready.
Found this post from Fabian Lee
# this wait for &#39;Available=True&#39; only works for initial deployment, not rolling kubectl wait deployment -n default golang-hello-world-web --for condition=Available=True --timeout=90s # wait using &#39;rollout status&#39; kubectl rollout status deployment golang-hello-world-web -n default --timeout=90s  </description>
    </item>
    
    <item>
      <title>Coming Soon</title>
      <link>https://www.fullaware.net/posts/comingsoon/</link>
      <pubDate>Fri, 23 Dec 2022 09:03:20 -0800</pubDate>
      
      <guid>https://www.fullaware.net/posts/comingsoon/</guid>
      <description>&lt;p&gt;Future home of Kubernetes, Python, VMware and homelab efforts.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Homelab</title>
      <link>https://www.fullaware.net/posts/homelab/</link>
      <pubDate>Fri, 23 Dec 2022 09:03:20 -0800</pubDate>
      
      <guid>https://www.fullaware.net/posts/homelab/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
